@page "/fatch"

@using AssignmentDNP2.Data
@inject FileContext FileContext
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="card">
    <h4 class="card-header">Add Adult</h4>
            <div class="card-body">
                <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                    <DataAnnotationsValidator/>
                    <div class="form-group">
                        <label>First Name</label>
                        <InputText @bind-Value="model.FirstName" class="form-control"/>
                        <ValidationMessage For="@(() => model.FirstName)"/>
                    </div>

                    <div class="form-group">
                        <label>Last Name</label>
                        <InputText @bind-Value="model.LastName" class="form-control"/>
                        <ValidationMessage For="@(() => model.LastName)"/>
                    </div>

                    <div class="form-group">
                        <label>HairColor</label>
                        <InputText @bind-Value="model.HairColor" class="form-control"/>
                        <ValidationMessage For="@(() => model.HairColor)"/>
                    </div>

                    <div class="form-group">
                        <label>EyeColor</label>
                        <InputText @bind-Value="model.EyeColor" class="form-control"/>
                        <ValidationMessage For="@(() => model.EyeColor)"/>
                    </div>

                    <div class="form-group">
                        <label>Age</label>
                        <InputNumber @bind-Value="model.Age" class="form-control"/>
                        <ValidationMessage For="@(() => model.Age)"/>
                    </div>

                    <div class="form-group">
                        <label>Weight</label>
                        <InputNumber @bind-Value="model.Weight" class="form-control"/>
                        <ValidationMessage For="@(() => model.Weight)"/>
                    </div>

                    <div class="form-group">
                        <label>Height</label>
                        <InputNumber @bind-Value="model.Height" class="form-control"/>
                        <ValidationMessage For="@(() => model.Height)"/>
                    </div>

                    <div class="form-group">
                        <label>Sex</label>
                        <InputText @bind-Value="model.Sex" class="form-control"/>
                        <ValidationMessage For="@(() => model.Sex)"/>
                    </div>
                    <button disabled="@loading" class="btn btn-primary">
                        @if (loading)
                        {
                            <span class="spinner-border spinner-border-sm mr-1"></span>
                        }
                        Add
                    </button>
                    <NavLink href="account/login" class="btn btn-link">Cancel</NavLink>
                </EditForm>
            </div>
 

</div>

@code {
      private Adult model = new Adult();
    private bool loading;

    private async void OnValidSubmit()
    {
    // reset alerts on submit

        loading = true;
        try
        {
            FileContext.Adults.Remove(model);
            FileContext.SaveChanges();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
        }
    }
    }
}